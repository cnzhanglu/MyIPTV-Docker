name: Build and Push MyIPTV Docker Image

on:
  schedule:
    - cron: '0 0 1 * *'  # 每周检查一次新版本
  workflow_dispatch:  # 允许手动触发

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      latest_version: ${{ steps.get-latest-version.outputs.latest_version }}
      current_version: ${{ steps.get-current-version.outputs.current_version }}
      needs_update: ${{ steps.compare-versions.outputs.needs_update }}
    steps:
      - name: Get latest version from MyIPTV
        id: get-latest-version
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/localvar/myiptv/releases/latest | jq -r '.tag_name' | sed 's/^v//')
          echo "latest_version=$LATEST_VERSION" >> $GITHUB_OUTPUT
          
      - name: Get current version in Docker Registry
        id: get-current-version
        run: |
          # 尝试获取已发布的最新版本标签
          CURRENT_VERSION=$(curl -s https://registry.hub.docker.com/v2/repositories/${{ github.repository_owner }}/myiptv/tags 2>/dev/null | jq -r '.results[0].name' || echo "none")
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
      - name: Compare versions
        id: compare-versions
        run: |
          if [ "${{ steps.get-latest-version.outputs.latest_version }}" != "${{ steps.get-current-version.outputs.current_version }}" ] && [ "${{ steps.get-latest-version.outputs.latest_version }}" != "null" ]; then
            echo "needs_update=true" >> $GITHUB_OUTPUT
          else
            echo "needs_update=false" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    needs: check-version
    if: ${{ needs.check-version.outputs.needs_update == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push multi-arch image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64, linux/arm64
          tags: |
            ${{ github.repository_owner }}/myiptv:latest
            ${{ github.repository_owner }}/myiptv:${{ needs.check-version.outputs.latest_version }}
            ghcr.io/${{ github.repository_owner }}/myiptv:latest
            ghcr.io/${{ github.repository_owner }}/myiptv:${{ needs.check-version.outputs.latest_version }}
          build-args: |
            VERSION=${{ needs.check-version.outputs.latest_version }}
